#!/usr/bin/env ruby

# This script processes files generated by org-mode and does some
# transformations to make them acceptable for Jekyll.

require "rubygems"
require "hpricot"
require "yaml"
require "time"

def process_post(post, layout)
  # Check if the post already has been processed (look for YAML header)
  return nil if post[0..2] == '---'

  # Strip off everything outside the main div & extract categories
  doc = Hpricot(post)
  cats = (doc/'category').remove
  cats = cats.inner_html.split(' ').map { |i| i.downcase }

  # Extract intro
  intro = (doc/'p')[0]
  intro = intro.inner_html

  # Extract h2 title
  h1 = (doc/'h1.title')
  #cleans the title from the post itself, so i can use as meta only
  (doc/'h1.title').remove
 
  # Extract the top outline
  post = doc.search('div#content').inner_html
  
  # Extract footnotes, if any, and downgrade h2 to h3
  footnotes = doc.search('div#footnotes').inner_html.gsub("h2", "h3")

  # Extract metadata and insert yaml
  meta = {}
  meta['layout'] = layout
  meta['title'] = h1.inner_html.gsub('&nbsp;', '').strip # insert h1 title
  meta['categories'] = cats unless cats.empty?
  meta['intro'] = intro unless intro.empty?
  #meta['date'] = date if date

  meta = meta.to_yaml + "---\n\n"

  # Return the whole thing
  return meta + post + footnotes
end

def process(glob, layout)
  Dir.glob(glob).each do |f|
    file = File.open(f, "r")
    post = process_post(file.read, layout)
    File.open(f, "w").write(post) if post
  end
end

process("#{File.dirname(__FILE__)}/_posts/*.html", "post")
process("#{File.dirname(__FILE__)}/pages/*.html", "page")
